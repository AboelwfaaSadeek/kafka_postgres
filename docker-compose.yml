
services:
  # =================================================================
  # 1. KAFKA (BROKER + CONTROLLER in KRaft Mode)
  # =================================================================
  kafka:
    image: confluentinc/cp-kafka:7.6.1
    container_name: kafka
    hostname: kafka 
    ports:
      - "9092:9092"
    environment:
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      
      # فصل منافذ المستمعين بشكل واضح
      KAFKA_LISTENERS: EXTERNAL://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093,INTERNAL://0.0.0.0:29092
      
      # الإعلان عن المستمعين:
      KAFKA_ADVERTISED_LISTENERS: EXTERNAL://localhost:9092,INTERNAL://kafka:29092
      
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT
      
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL 
      
      # إضافة هذا لزيادة وقت محاولة Kafka Broker للانتهاء من عملية البدء (مهم في بيئة Docker/Kraft)
      KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE: "false"
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: "0"
      
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      CLUSTER_ID: "4L6g3nShT-eMCtK--X86sw"
    restart: unless-stopped
    
  # =================================================================
  # 2. POSTGRESQL 
  # =================================================================
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: kafkauser
      POSTGRES_PASSWORD: kafkapass
      POSTGRES_DB: orders_db
    ports:
      - "5432:5432"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  # =================================================================
  # 3. KAFKA CONNECT
  # =================================================================
  kafka-connect:
    image: confluentinc/cp-kafka-connect:7.6.0
    container_name: kafka-connect
    depends_on:
      - kafka
      - postgres
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka:29092 
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: "connect-cluster"
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_CONFIG_STORAGE_TOPIC: "connect-configs" 
      CONNECT_OFFSET_STORAGE_TOPIC: "connect-offsets"
      CONNECT_STATUS_STORAGE_TOPIC: "connect-status"
      CONNECT_PLUGIN_PATH: "/usr/share/java"
      CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
      CONNECT_LOG4J_ROOT_LOGLEVEL: "INFO"
      CONNECT_HEALTHCHECK_ENABLED: "false"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
    volumes:
      - ./plugins/kafka-connect-jdbc:/usr/share/java/kafka-connect-jdbc 
    restart: always
  # =================================================================
  # 4. KAFKA UI
  # =================================================================
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29092
    depends_on:
      - kafka

  # =================================================================
  # 5. STREAMING PRODUCER
  # =================================================================
  streaming-producer:
    build: . 
    container_name: streaming-producer
    depends_on:
      - kafka
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092 
      PYTHONUNBUFFERED: 1
    restart: on-failure 